{"version":3,"file":"component---src-templates-search-js-98d344182129236138ac.js","mappings":"0JAIOA,EAAYC,EAAAA,GAAAA,SA6DnB,UA5De,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACTC,EAAUF,EAAKG,kBAAtBC,MAEN,EAA0BN,EAAS,IAA5BO,EAAP,KAAcC,EAAd,KAKIC,EAAcF,EAAMG,OAAOC,cAE/B,GAAIF,EAAYG,OAAS,EACvB,IAAIC,EAAcT,EAAMU,QAAO,SAAAC,GAC7B,OACEA,EAAEC,KAAKC,YAAYC,MAAMP,cAAcQ,MAAMV,IAC7CM,EAAEC,KAAKI,KAAKT,cAAcQ,MAAMV,MAItC,OACE,sCACE,mBAAC,KAAD,CAAKS,MAAOX,GAAS,gBACrB,mBAAC,KAAD,CAAMJ,SAAUA,IAChB,mBAAC,KAAD,CAAWkB,UAAU,mBACnB,yBAAIA,UAAU,6BACZ,+BACEC,KAAK,OACLf,MAAOA,EACPgB,SAtBa,SAAAC,GACrBhB,EAASgB,EAAEC,OAAOlB,QAsBVmB,YAAY,YACZC,MAAO,CACLC,MAAO,OACPC,OAAQ,QACRC,MAAO,UACPC,aAAc,oBACdC,UAAW,OACXC,UAAW,OACXC,QAAS,OACTC,aAAc,GAEhBC,WAAS,KAGb,0BAAKf,UAAU,cACZR,EACGA,EACGC,QAAO,SAAAuB,GAAI,OAAIA,EAAKrB,KAAKC,YAAYC,MAAMN,OAAS,KACpD0B,KAAI,YAAqB,IAAZD,EAAW,EAAjBrB,KACEuB,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GACjB,EAAoCH,EAAKpB,YAAjCC,EAAR,EAAQA,MAAOuB,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,KAC3B,OACE,mBAAC,KAAD,CAAUzC,KAAM,CAAEgB,MAAAA,EAAOuB,KAAAA,EAAMC,KAAAA,EAAMC,KAAAA,EAAMJ,QAAAA,EAASC,GAAAA,QAG1D","sources":["webpack://gatsby-starter-default/./src/templates/search.js"],"sourcesContent":["\nimport { graphql } from \"gatsby\"\n\nimport { Container,BlogList,SEO,Link,Menu,React } from \"../components/Blog\"\nconst {useState} = React\nconst Search = ({ data, location }) => {\n  let { edges: posts } = data.allMarkdownRemark\n\n  const [value, setValue] = useState(\"\")\n\n  const handleAddValue = e => {\n    setValue(e.target.value)\n  }\n  var searchValue = value.trim().toLowerCase()\n\n  if (searchValue.length > 0) {\n    var searchposts = posts.filter(l => {\n      return (\n        l.node.frontmatter.title.toLowerCase().match(searchValue) ||\n        l.node.html.toLowerCase().match(searchValue)\n      )\n    })\n  }\n  return (\n    <>\n      <SEO title={value || \"Search Page\"} />\n      <Menu location={location} />\n      <Container className=\"overflow-hidden\">\n        <h1 className=\"my-5 py-5 py-md-0 my-md-0\">\n          <textarea\n            type=\"text\"\n            value={value}\n            onChange={handleAddValue}\n            placeholder=\"Type here\"\n            style={{\n              width: \"100%\",\n              border: \"unset\",\n              color: \"#354f52\",\n              borderBottom: \"1px solid #354f52\",\n              minHeight: \"60px\",\n              boxShadow: \"none\",\n              outline: \"none\",\n              borderRadius: 0,\n            }}\n            autoFocus\n          />\n        </h1>\n        <div className=\"blog-posts\">\n          {searchposts\n            ? searchposts\n                .filter(post => post.node.frontmatter.title.length > 0)\n                .map(({ node: post }) => {\n                  const { excerpt, id } = post\n                  const { title, path, date, tags } = post.frontmatter\n                  return (\n                    <BlogList data={{ title, path, date, tags, excerpt, id }} />\n                  )\n                })\n            : null}\n        </div>\n      </Container>\n    </>\n  )\n}\n\nexport default Search\n\nexport const searchListQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          html\n          frontmatter {\n            title\n            date(formatString: \"MMM YYYY DD\")\n            path\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["useState","React","data","location","posts","allMarkdownRemark","edges","value","setValue","searchValue","trim","toLowerCase","length","searchposts","filter","l","node","frontmatter","title","match","html","className","type","onChange","e","target","placeholder","style","width","border","color","borderBottom","minHeight","boxShadow","outline","borderRadius","autoFocus","post","map","excerpt","id","path","date","tags"],"sourceRoot":""}