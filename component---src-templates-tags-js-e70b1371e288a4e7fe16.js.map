{"version":3,"file":"component---src-templates-tags-js-e70b1371e288a4e7fe16.js","mappings":"0JAgIA,UA1Ha,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,IAAKC,EAAaJ,EAAbI,SAC1B,EAA8BH,EAAKI,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAA0B,IAAhBN,EACVO,EAASP,IAAgBE,EACzBM,EAAWR,EAAc,GAAM,EAAI,IAAMA,EAAc,GAAGS,WAC1DC,GAAYV,EAAc,GAAGS,WAC7BE,EAAeN,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEJ,EAFF,IAIf,OACE,sCACA,mBAAC,KAAD,CAAMW,SAAS,cACf,mBAAC,KAAD,MACE,mBAAC,KAAD,KACE,mBAAC,KAAD,CAAKC,MAAM,SACX,0BAAKC,MAAM,6CACT,wBAAGC,MAAO,CAAEC,cAAe,QAASC,SAAU,SAA9C,kBAKF,yBACE,WAAS,UACT,oBAAkB,MAClB,gBAAc,OACdC,UAAU,uBACVH,MAAO,CAAEI,WAAY,MALvB,SAQE,8BARF,QAWA,6BAAKR,GACL,0BAAKO,UAAU,mBACZd,EACEgB,QAAO,qBAAGC,KAAgBC,YAAYT,MAAMU,OAAS,KACrDC,KAAI,YAAe,IAAZH,EAAW,EAAXA,KACEI,EAAgBJ,EAAhBI,QAASC,EAAOL,EAAPK,GACjB,EAAoCL,EAAKC,YAAjCT,EAAR,EAAQA,MAAOc,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,KAC3B,OACE,mBAAC,KAAD,CAAU9B,KAAM,CAAEc,MAAAA,EAAOc,KAAAA,EAAMC,KAAAA,EAAMC,KAAAA,EAAMJ,QAAAA,EAASC,GAAAA,SAK5D,mBAAC,KAAD,KACA,mBAAC,KAAD,CACEI,GAAG,KACHC,GAAG,IACHb,UAAU,mGAETc,MAAMC,KAAK,CAAEV,OAAQrB,IAAY,SAACgC,EAAGC,GAAJ,OAChCA,EAAI,IAAMnC,EACR,sCACE,mBAAC,KAAD,CACEe,MAAO,CACLqB,OAAQ,UAEVC,IAAG,qBAAsBF,EAAI,GAC7BG,GAAE,cAAgBrC,EAAIsC,cAApB,KAA2C,IAANJ,EAAU,GAAKA,EAAI,IAEzDA,EAAI,GAGP,2BACEpB,MAAO,CACLyB,MAAO,OACPC,aAAc,wBAKpB,mBAAC,KAAD,CACE1B,MAAO,CACL2B,MAAO,OACPN,OAAQ,UAEVC,IAAG,qBAAsBF,EAAI,GAC7BG,GAAE,cAAgBrC,EAAIsC,cAApB,KAA2C,IAANJ,EAAU,GAAKA,EAAI,IAEzDA,EAAI,OAKb,mBAAC,KAAD,CACEL,GAAG,KACHC,GAAG,IACHb,UAAU,sDAERZ,GACA,mBAAC,KAAD,CACES,MAAO,CACLqB,OAAQ,UAENE,GAAI,cAAcrC,EAAIsC,cAAlB,IAAqC/B,EACzCmC,IAAI,QALV,eAUApC,GACA,mBAAC,KAAD,CACEQ,MAAO,CACLqB,OAAQ,UAENE,GAAI,cAAcrC,EAAIsC,cAAlB,IAAqC7B,EACzCiC,IAAI,QALV,aAaR,mBAAC,KAAD","sources":["webpack://gatsby-starter-default/./src/templates/tags.js"],"sourcesContent":["\n// Components\nimport { graphql } from \"gatsby\"\n\nimport { Link, SEO,Container,Row,Col,BlogList,BlogPageHeader,Menu,FooterTemplate,React } from \"../components/Blog\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { currentPage, tag, tagPages } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const isFirst = currentPage === 1\n  const isLast = currentPage === tagPages\n  const prevPage = currentPage - 1 === 1 ? \"\" : (currentPage - 1).toString()\n  const nextPage = (currentPage + 1).toString()\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <>\n    <Menu position=\"fixed-top\"/>\n    <BlogPageHeader/>\n      <Container>\n        <SEO title=\"Blog\" />\n        <div class=\"scroll-down text-uppercase position-fixed\">\n          <p style={{ letterSpacing: \"0.5em\", fontSize: \"12px\" }}>\n            scroll down →\n          </p>\n        </div>\n\n        <h2\n          data-aos=\"fade-up\"\n          data-aos-duration=\"600\"\n          data-aos-once=\"true\"\n          className=\"custom-border-bottom\"\n          style={{ fontWeight: 600 }}\n        >\n          Latest\n          <br />\n          Post\n        </h2>\n        <h4>{tagHeader}</h4>\n        <div className=\"blog-posts mt-5\">\n          {edges\n            .filter(({ node }) => node.frontmatter.title.length > 0)\n            .map(({ node }) => {\n              const { excerpt, id } = node\n              const { title, path, date, tags } = node.frontmatter\n              return (\n                <BlogList data={{ title, path, date, tags, excerpt, id }}></BlogList>\n              )\n            })}\n        </div>\n        \n        <Row>\n        <Col\n          xs=\"12\"\n          md=\"6\"\n          className=\"d-flex align-items-center font-weight-bold justify-content-center justify-content-md-start my-3\"\n        >\n          {Array.from({ length: tagPages }, (_, i) =>\n            i + 1 === currentPage ? (\n              <>\n                <Link\n                  style={{\n                    margin: \"0 10px\",\n                  }}\n                  key={`pagination-number${i + 1}`}\n                  to={`/blog/tags/${tag.toLowerCase()}/${i === 0 ? \"\" : i + 1}`}\n                >\n                  {i + 1}\n                </Link>\n\n                <span\n                  style={{\n                    width: \"96px\",\n                    borderBottom: \"2px solid #354f52\",\n                  }}\n                ></span>\n              </>\n            ) : (\n              <Link\n                style={{\n                  color: \"#aaa\",\n                  margin: \"0 10px\",\n                }}\n                key={`pagination-number${i + 1}`}\n                to={`/blog/tags/${tag.toLowerCase()}/${i === 0 ? \"\" : i + 1}`}\n              >\n                {i + 1}\n              </Link>\n            )\n          )}\n        </Col>\n        <Col\n          xs=\"12\"\n          md=\"6\"\n          className=\"align-items-center text-center text-md-right my-3\"\n        >\n          {!isFirst && (\n            <Link\n              style={{\n                margin: \"0 10px\",\n              }}\n                  to={`/blog/tags/${tag.toLowerCase()}/` + prevPage}\n                  rel=\"prev\"\n            >\n              ← Previous\n            </Link>\n          )}\n          {!isLast && (\n            <Link\n              style={{\n                margin: \"0 10px\",\n              }}\n                  to={`/blog/tags/${tag.toLowerCase()}/` + nextPage}\n                  rel=\"next\"\n            >\n              Next →\n            </Link>\n          )}\n        </Col>\n        </Row>\n      </Container>\n    <FooterTemplate/>\n    </>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            path\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["pageContext","data","currentPage","tag","tagPages","allMarkdownRemark","edges","totalCount","isFirst","isLast","prevPage","toString","nextPage","tagHeader","position","title","class","style","letterSpacing","fontSize","className","fontWeight","filter","node","frontmatter","length","map","excerpt","id","path","date","tags","xs","md","Array","from","_","i","margin","key","to","toLowerCase","width","borderBottom","color","rel"],"sourceRoot":""}