{"version":3,"file":"component---src-templates-project-js-2b1e17b0cbed20f9b43f.js","mappings":"gMAIe,SAASA,EAAT,GAAwD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAEhDC,GADiBH,EAAKI,kBAAtBC,MAC0BJ,EAA1BE,aAA0BF,EAAbK,SAGJH,EAAc,GAAM,IAAUA,EAAc,GAAGI,YAC9CJ,EAAc,GAAGI,WAKnC,OACE,4CACA,sBAAC,EAAAC,IAAD,CAAKC,MAAM,YACX,sBAAC,EAAAC,KAAD,CAAMC,SAAS,YAAYT,SAAUA,IACrC,sBAAC,EAAAU,kBAAD,MACA,sBAAC,EAAAC,cAAD,MACE,sBAAC,EAAAC,eAAD","sources":["webpack://gatsby-starter-default/./src/templates/project.js"],"sourcesContent":["import { graphql } from \"gatsby\"\n\nimport { Link, Row,Col,Container,ProjectPageHeader,Menu,FooterTemplate,SEO,React,ProjectSlider } from \"../components/ProjectPage\"\n\nexport default function ProjectPage ({ data, pageContext, location }) {\n  const { edges: posts } = data.allMarkdownRemark\n  const { currentPage, numPages } = pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? \"\" : (currentPage - 1).toString()\n  const nextPage = (currentPage + 1).toString()\n  const contentProps = {\n    posts,currentPage,numPages,isFirst,isLast,prevPage,nextPage\n  }\n  // console.log(currentPage)\n  return (\n    <>\n    <SEO title=\"Project\" />\n    <Menu position=\"fixed-top\" location={location} />\n    <ProjectPageHeader/>\n    <ProjectSlider/>\n      <FooterTemplate/>\n    </>\n  )\n}\n\n// export const pageQuery = graphql`\n//   query BlogQuery {\n//     allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n//       edges {\n//         node {\n//           excerpt(pruneLength: 250)\n//           id\n//           frontmatter {\n//             title\n//             date(formatString: \"MMMM DD, YYYY\")\n//             path\n//           }\n//         }\n//       }\n//     }\n//   }`\n\nexport const projectListQuery = graphql`\n  query projectListQuery($skip: Int!, $limit: Int!, $filter: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { fileAbsolutePath: { regex: $filter } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            path\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["ProjectPage","data","pageContext","location","currentPage","allMarkdownRemark","edges","numPages","toString","SEO","title","Menu","position","ProjectPageHeader","ProjectSlider","FooterTemplate"],"sourceRoot":""}